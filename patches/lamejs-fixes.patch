diff --git a/node_modules/lamejs/src/js/BitStream.js b/node_modules/lamejs/src/js/BitStream.js
index dd9d69f..94471ae 100644
--- a/node_modules/lamejs/src/js/BitStream.js
+++ b/node_modules/lamejs/src/js/BitStream.js
@@ -19,6 +19,17 @@ var Tables = require('./Tables.js');
 var Encoder = require('./Encoder.js');
 var LameInternalFlags = require('./LameInternalFlags.js');
 
+BitStream.EQ = function (a, b) {
+    return (Math.abs(a) > Math.abs(b)) 
+        ? (Math.abs((a) - (b)) <= (Math.abs(a) * 1e-6))
+        : (Math.abs((a) - (b)) <= (Math.abs(b) * 1e-6));
+};
+
+BitStream.NEQ = function (a, b) {
+    return !BitStream.EQ(a, b);
+};
+
+var LAME_MAXMP3BUFFER = 147456;
+
 function BitStream() {
     var self = this;
     var CRC16_POLYNOMIAL = 0x8005;
 
     this.totbit = 0;
     this.mode = WRITEMODE;
     this.CRC16_POLYNOMIAL = 0x8005;
+    
+    // Add EQ and NEQ as instance methods
+    this.EQ = function(a, b) {
+        if (a > b) {
+            return Math.abs(a - b) <= (Math.abs(a) * 1e-6);
+        }
+        return Math.abs(a - b) <= (Math.abs(b) * 1e-6);
+    };
+
+    this.NEQ = function(a, b) {
+        return !this.EQ(a, b);
+    };
 };

 BitStream.prototype.setModeByte = function(val) {
@@ -900,14 +912,6 @@
     return this.CRC;
 };

-BitStream.EQ = function(a, b) {
-    if (a > b) {
-        return Math.abs(a - b) <= (Math.abs(a) * 1e-6);
-    }
-    return Math.abs(a - b) <= (Math.abs(b) * 1e-6);
-};
-
-BitStream.NEQ = function(a, b) {
-    return !BitStream.EQ(a, b);
-};
-
 module.exports = BitStream; 